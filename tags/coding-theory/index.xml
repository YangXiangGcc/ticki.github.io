<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Coding Theory on Ticki&#39;s blog</title>
    <link>http://ticki.github.io/tags/coding-theory/</link>
    <description>Recent content in Coding Theory on Ticki&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Nov 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://ticki.github.io/tags/coding-theory/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ternary as a prediction residue code</title>
      <link>http://ticki.github.io/blog/ternary-as-a-prediction-residue-code/</link>
      <pubDate>Fri, 11 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://ticki.github.io/blog/ternary-as-a-prediction-residue-code/</guid>
      <description>If we look at how most lossless image compression formats works, they don&#39;t use deduplication compression (like LZ-class algorithms), because that&#39;s simply far from the nature of images. The same goes for audio and video. Instead, you have two maps:
 The approximative map (\(a(\vec{v})\)): This should give a rough outline of the medium, that is, it is should predict predict the medium based on a small sequence of bytes (defined by the encoding).</description>
    </item>
    
  </channel>
</rss>